#textdomain wesnoth-The_Earths_Gut

#define INITIALIZE_CAMPAIGN_VARIABLES
#enddef
#define CLEAR_CAMPAIGN_VARIABLES
    {CLEAR_VARIABLE u_HamelLoyalUnits}
#enddef
#define INITIALIZE_SCENARIO_VARIABLES
    {VARIABLE_DIFFICULTY_DEPENDANT i_StartGold 150 130 100}
    {VARIABLE b_Water no}
    {VARIABLE locs_HamelCastle null}
    {VARIABLE i_WaterLava_x 0}
    {VARIABLE i_WaterLava_y 0}
#enddef
#define CLEAR_SCENARIO_VARIABLES
    {CLEAR_VARIABLE i_StartGold}
    {CLEAR_VARIABLE b_Water}
    {CLEAR_VARIABLE locs_HamelCastle}
    {CLEAR_VARIABLE i_WaterLava_x}
    {CLEAR_VARIABLE i_WaterLava_y}
#ifdef EASY
    {CLEAR_VARIABLE i_SideToKill}
#endif
#enddef
#define PASSABLE
    [+unit]
        placement=map
        passable=yes
    [/unit]
#enddef

[scenario]
    id=10_Old_friends
    name= _ "Old Friends"
    map_generation=lua
    snapshot=no

    [story]
        [part]
            story= _ "Then at some point, the surroundings changed so that even the most experienced trolls hadn't ever seen them before. Dulatus was afraid that they might have lost their way..."
        [/part]
    [/story]
    {TRAVELMAP_OLD_FRIENDS}

    [generator]
        id="cavegen"
        config_name="Lua Cave Generator"
        create_map = << return wesnoth.require("cave_map_generator").generate_map(...) >>

        # map generator code follows
        # positions of most stuff
        # are highly variable

        map_width=56
        map_height=33
        flipx_chance=0
#ifdef __UNUSED__
        villages=25 #This doesn't seem to have any effect - using village_density instead.
#endif
        village_density=30
#ifdef __UNUSED__
        castle_size=4 #This doesn't seem to have any effect.
#endif

        terrain_wall = "Xu"
        terrain_clear = "Uu"
        terrain_keep = "Kud"
        terrain_castle = "Cud"
        terrain_village = "Uu^Vud"

        # CHAMBER and PASSAGE macros are defined in utils/random_map.cfg
        # this first chamber is for the player, somewhere in the far east
        {CHAMBER Dulatus 49 6-27 3 10 (
            #[items]

            [item_location]
                id = 1
                place_castle = yes
            [/item_location]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_Dulatus}
#endif
            #[/items]
        )}
        #empty small chamber symbolizing the entrance
        {CHAMBER entrance 55 13-19 2 1 (
            {PASSAGE Dulatus 2 5 1}
        )}
        #the player's destination, Hamel, somewhere in the far west
        {CHAMBER Hamel 6 6-27 3 10 (
            #[items]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_Hamel}
#endif
            #[/items]
            [item_location]
                id = 2
                place_castle = yes
            [/item_location]
        )}
        #empty small chamber symbolizing the exit
        {CHAMBER exit 1 13-19 2 1 (
            {PASSAGE Hamel 2 5 1}
        )}

        #the first enemy, goblins
        {CHAMBER goblins 35-40 6-27 3 10 (
            #[items]

            [item_location]
                id = 3
                place_castle = yes
            [/item_location]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_goblins}
#endif
            #[/items]
            {PASSAGE Dulatus 2 5 1}
        )}

        #empty chamber for other side
        {CHAMBER anti_goblins 35-40 6-27 3 10 (
#ifdef __UNUSED__
            #[items]
            {RETRIEVE_CHAMBER_POSITION i_anti_goblins}
            #[/items]
#endif
            {PASSAGE Dulatus 2 10 10}
        )}

        #second enemy, orcs
        {CHAMBER orcs 20-35 6-27 3 10 (
            #[items]

            [item_location]
                id = 4
                place_castle = yes
            [/item_location]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_orcs}
#endif
            #[/items]
            {PASSAGE anti_goblins 2 10 10}
            {PASSAGE goblins 2 5 1}
        )}

        #chamber with water or lava, same variety as orcs
        {CHAMBER water_lava 20-35 6-27 3 10 (
            #[items]
            {RETRIEVE_CHAMBER_POSITION i_WaterLava}
            #[/items]
        )}

        #bigger empty chamber before the goal
        {CHAMBER before_goal 20 11-22 3 10 (
#ifdef __UNUSED__
            #[items]
            {RETRIEVE_CHAMBER_POSITION i_before_goal}
            #[/items]
#endif
            {PASSAGE orcs 3 10 20}
            {PASSAGE water_lava 2 10 10}
        )}

        #small chamber, use their random location to create random passages since chance doesn't seem to work
        {CHAMBER random_passages_start 25-40 7-26 1 10 (
#ifdef __UNUSED__
            #[items]
            {RETRIEVE_CHAMBER_POSITION i_random_passages_start}
            #[/items]
#endif
            {PASSAGE water_lava 2 10 10}
        )}

        #chamber with undead
        {CHAMBER undead 10-25 6-27 3 10 (
            #[items]

            [item_location]
                id = 5
                place_castle = yes
            [/item_location]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_undead}
#endif
            #[/items]
            {PASSAGE before_goal 2 5 1}
            {PASSAGE Hamel 2 5 1}
        )}

        #chamber with trolls
        {CHAMBER trolls 10-25 6-27 3 10 (
            #[items]

            [item_location]
                id = 6
                place_castle = yes
            [/item_location]

#ifdef __UNUSED__
            {RETRIEVE_CHAMBER_POSITION i_trolls}
#endif
            #[/items]
            {PASSAGE before_goal 2 5 1}
            {PASSAGE Hamel 2 5 1}
        )}
    [/generator]

    [side]
        side=1
        controller=human
        type=Dwarvish Stalwart
        id=Dulatus
        name= _ "Dulatus"
        canrecruit=yes
        persistent=yes
        unrenamable=yes
        save_id=human_player
        shroud=yes
        recruit=Dwarvish Scout
        team_name=dwarves
        {FLAG_VARIANT knalgan}
        # TODO: switch to linear progression, either {160 130 100} or {160 140 120}:
        {GOLD 160 140 100}
    [/side]

    [side]
        side=2
        controller=ai
        no_leader=yes
        {RECRUIT (Dwarvish Fighter,Dwarvish Thunderer,Alchemist,Dwarvish Scout) (Dwarvish Fighter,Dwarvish Thunderer,Alchemist,Dwarvish Scout) (Dwarvish Fighter,Dwarvish Thunderer,Dwarvish Scout)}
        team_name=dwarves
        #shroud=yes would conflict with the new sighted event unless wesnoth.findpath(viewing_side=0) bug is fixed # wmllint: noconvert
        {FLAG_VARIANT knalgan}
        [ai]
            passive_leader=yes
            grouping=defensive
            aggression={ON_DIFFICULTY 0.1 0.2 0.3} # (all less than the default of 0.4)
            caution={ON_DIFFICULTY 0.48 0.42 0.36} # (all more than the default of 0.25)
            recruitment_diversity=3.5
            [goal]
                name=protect_unit
                [criteria]
                    side=2
                    canrecruit=yes
                [/criteria]
                value={ON_DIFFICULTY 70 60 50}
                protect_radius={ON_DIFFICULTY 4 5 6}
            [/goal]
            [goal]
                name=protect_unit
                [criteria]
                    id=Hamel
                [/criteria]
                value={ON_DIFFICULTY 70 60 50}
                protect_radius={ON_DIFFICULTY 4 5 6}
            [/goal]
            [avoid]
                terrain=Cfr^Edt,Kfr^Edb,Xu,Qxu
            [/avoid]
        [/ai]
        {GOLD 100 80 60}
    [/side]

    [side]
        side=3
        controller=ai
        type=Goblin Rouser
        id=Rigor
        name= _ "Rigor"
        canrecruit=yes
        recruit=Goblin Spearman
        team_name=cave_occupants
        hidden=yes
        [ai]
            passive_leader=yes
            passive_leader_shares_keep=yes
            aggression=1.0
        [/ai]
        # TODO: switch to linear progression, either {70 80 90}, {70 90 110}, {80 90 100}, or {70 85 100}:
        {GOLD 70 90 100}
    [/side]

    [side]
        side=4
        controller=ai
        id=Grugdush
        type=Orcish Warlord
        name= _ "Grugdush"
        canrecruit=yes
        {RECRUIT (Orcish Archer,Orcish Grunt,Wolf Rider) (Orcish Archer,Orcish Grunt,Wolf Rider) (Orcish Archer,Orcish Grunt,Wolf Rider,Orcish Warrior,Orcish Crossbowman,Goblin Pillager)}
        team_name=cave_occupants
        hidden=yes
        [ai]
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value=2
            [/goal]
            recruitment_pattern=fighter,archer,scout,scout
            passive_leader=yes
            passive_leader_shares_keep=yes
        [/ai]
        {GOLD 20 30 50}
        {INCOME 6 7 9}
    [/side]

    [side]
        side=5
        controller=ai
        id=Dead_Knight
        type=Death Knight
        name= _ "Dead Knight"
        canrecruit=yes
        #Skeleton,Ghost,Revenant,Skeleton Archer,Bone Shooter,Dark Adept,Ghoul,Chocobone,Wraith
        {RECRUIT (Skeleton,Skeleton Archer,Ghoul,Dark Adept) (Skeleton,Skeleton Archer,Ghoul,Dark Adept) (Skeleton,Skeleton Archer,Ghoul,Chocobone,Revenant,Ghost,Dark Adept,Bone Shooter)}
        team_name=cave_occupants
        hidden=yes
        [ai]
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value=3
            [/goal]
            passive_leader=yes
            passive_leader_shares_keep=yes
        [/ai]
        {GOLD 20 30 50}
        {INCOME 6 7 9}
    [/side]

    [side]
        side=6
        controller=ai
        id=Gark
        type=Troll Warrior
        name= _ "Gark"
        canrecruit=yes
        {RECRUIT (Troll Whelp,Apprentice Shaman) (Troll Whelp,Apprentice Shaman) (Troll Whelp,Apprentice Shaman,Troll,Troll Rocklobber,TEG Troll Shaman,Ice Troll)}
        team_name=cave_occupants
        hidden=yes
        [ai]
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value=3
            [/goal]
            passive_leader=yes
            passive_leader_shares_keep=yes
        [/ai]
        {GOLD 20 30 50}
        {INCOME 6 7 9}
    [/side]

    next_scenario=11t_Council
    victory_when_enemies_defeated=no
    {TURNS 33 31 28}
    {UNDERGROUND}

    {MOOD_EPIC}

#ifdef __UNUSED__
    {TEG_LIMIT_CONTEMPORANEOUS_RECRUITS_DIFFICULTY_DEPENDANT 3 (Goblin Impaler) 0 1 3}
    {TEG_LIMIT_CONTEMPORANEOUS_RECRUITS_DIFFICULTY_DEPENDANT 3 (Goblin Rouser) 0 0 1}
#endif
#ifdef HARD
    {LIMIT_CONTEMPORANEOUS_RECRUITS 4 (Orcish Warrior) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 4 (Orcish Crossbowman) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 4 (Goblin Pillager) 1}

    {LIMIT_CONTEMPORANEOUS_RECRUITS 5 (Chocobone) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 5 (Revenant) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 5 (Bone Shooter) 1}

    {LIMIT_CONTEMPORANEOUS_RECRUITS 6 (Troll) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 6 (Troll Rocklobber) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 6 (TEG Troll Shaman) 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 6 (Ice Troll) 1}
#endif

    {SETUP_LUA}
    {SAVEFILE_COMPATIBILITY}
    [event]
        name=prestart
        [objectives]
            side=1
            summary=_"Final Objectives:"
            [objective]
                description=_ "Dulatus must reach Hamel's castle."
                condition=win
            [/objective]
            {HERO_DEATHS_OBJECTIVE_LOSSES}
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=yes
                carryover_percentage=40
            [/gold_carryover]
        [/objectives]
        {INITIALIZE_CAMPAIGN_VARIABLES}
        {INITIALIZE_SCENARIO_VARIABLES}

        ############################################################################################

        #unstore Hamel and make him the allied leader
        {VARIABLE u_Hamel.side 2}
        [store_starting_location]
            side=2
            variable=c_StartingLocation
        [/store_starting_location]
        {VARIABLE u_Hamel.x $c_StartingLocation.x}
        {VARIABLE u_Hamel.y $c_StartingLocation.y}
        {CLEAR_VARIABLE c_StartingLocation}
        # wmllint: recognize Hamel
        [unstore_unit]
            variable=u_Hamel
        [/unstore_unit]
        {CLEAR_VARIABLE u_Hamel}

        ############################################################################################

        #make sure units aren't recalled into cave wall
        [store_starting_location]
            side=1
            variable=c_StartingLoc
        [/store_starting_location]
        [store_locations]
            variable=locs_AdjacentToStartingLoc
            [not]
                terrain=Cud,Kud
            [/not]
            [and]
                x=$c_StartingLoc.x
                y=$c_StartingLoc.y
                radius=1
            [/and]
        [/store_locations]
        {CONVERT_TERRAIN locs_AdjacentToStartingLoc Uu}
        {CLEAR_VARIABLE c_StartingLoc}
        {CLEAR_VARIABLE locs_AdjacentToStartingLoc}

        #-------------------------------------------------

        # Killing one side entirely makes the scenario emptier and more boring,
        # so instead I'm changing it to just weakening them.
#ifdef EASY
        [set_variable]
            name=i_SideToKill
            rand=5,6
        [/set_variable]
        [harm_unit]
            [filter]
                side=$i_SideToKill
            [/filter]
            amount=99
            kill=no
            poisoned=yes
            slowed=yes
        [/harm_unit]
        [event]
            name=recruit
            first_time_only=no
            [filter]
                side=$i_SideToKill
            [/filter]
            [filter_second]
                side=$i_SideToKill
                canrecruit=yes
            [/filter_second]
            [harm_unit]
                [filter]
                    id=$unit.id
                [/filter]
                amount=99
                kill=no
                poisoned=yes
                slowed=yes
            [/harm_unit]
        [/event]
        # Wreck that side's castle by turning it ruined (but don't erase it, though):
        [store_starting_location]
            side=$i_SideToKill
            variable=c_StartingLocation
        [/store_starting_location]
        [store_locations]
            variable=locs_CastleToErase
            terrain=Cud,Kud
            [and]
                x=$c_StartingLocation.x
                y=$c_StartingLocation.y
                radius=1
            [/and]
        [/store_locations]
        {CONVERT_TERRAIN locs_CastleToErase Cfr^Edt}
        [terrain]
            x,y=$c_StartingLocation.x,$c_StartingLocation.y
            terrain=Kfr^Edb
        [/terrain]
        {CLEAR_VARIABLE c_StartingLocation}
        {CLEAR_VARIABLE locs_CastleToErase}
#endif
        #-------------------------------------------------

        #apply a "random" terrain mask with suitable types since the map generator creates only basic terrain
        [terrain_mask]
            x,y=1,1
            mask={TEG_MAP 10_Old_friends_mask.mask}

            [rule]
                #cave to fungus
                old=Uu
                new=Uu^Uf
                #no terrain key specified means use the new terrain
            [/rule]
            [rule]
                #cave to cave hills
                old=Uu
                new=Uh
            [/rule]
            [rule]
                #cave to dwarvish castle hex
                old=Uu
                new=Cud
            [/rule]
            [rule]
                #cave wall to chasm
                #use only on former cave walls to not interrupt passages
                old=Xu
                new=Qxu
            [/rule]
            [rule]
                #cave villages to the other type of cave villages, in case that terrain type in mask is cave hill or chasm; to convert roughly half of the villages
                old=Uu^Vu
                new=Uh,Qxu
                terrain=Uu^Vud
            [/rule]
            [rule]
                #default, matches everything - don't change anything else
                use_old=yes
            [/rule]
        [/terrain_mask]

        #-------------------------------------------------

        #store Hamel's castle hexes for the win-moveto event
        [store_starting_location]
            side=2
            variable=c_SideTwoStartingLoc
        [/store_starting_location]
        [store_locations]
            variable=locs_HamelCastle
            terrain=Cud,Kud
            [and]
                x=$c_SideTwoStartingLoc.x
                y=$c_SideTwoStartingLoc.y
                radius=2
            [/and]
        [/store_locations]
        {CLEAR_VARIABLE c_SideTwoStartingLoc}
    [/event]

#define EXTRA_EXPEDITIONER TYPE ID TRAITS
    {VACANT_HEX $c_Start.x $c_Start.y c_Position}
    [move_unit_fake]
        x=$locs_MoveUnitFakesFrom[$i_MoveUnitFakesFromIndex].x,$c_Position.x
        y=$locs_MoveUnitFakesFrom[$i_MoveUnitFakesFromIndex].y,$c_Position.y
        side=2
        type={TYPE}
    [/move_unit_fake]
    [unit]
        side=2
        type={TYPE}
        x=$c_Position.x
        y=$c_Position.y
        generate_name=yes
        id={ID}
        [modifications]
            {TRAITS}
        [/modifications]
    [/unit]
#enddef
    [event]
        name=start

        #debug labels
#ifdef DEBUG_MODE
        {DEBUG_MSG "Generating labels for debug mode..."}
        {SET_LABEL $i_Dulatus_x $i_Dulatus_y _"Dulatus"}
        {SET_LABEL $i_Hamel_x $i_Hamel_y _"Hamel"}
        {SET_LABEL $i_goblins_x $i_goblins_y _"goblins"}
        {SET_LABEL $i_anti_goblins_x $i_anti_goblins_y _"anti_goblins"}
        {SET_LABEL $i_small_start_x $i_small_start_y _"small_start"}
        {SET_LABEL $i_orcs_x $i_orcs_y _"orcs"}
        {SET_LABEL $i_WaterLava_x $i_WaterLava_y _"WaterLava"}
        {SET_LABEL $i_before_goal_x $i_before_goal_y _"before_goal"}
        {SET_LABEL $i_small_end_x $i_small_end_y _"small_end"}
        {SET_LABEL $i_undead_x $i_undead_y _"undead"}
        {SET_LABEL $i_trolls_x $i_trolls_y _"trolls"}
        {SET_LABEL $i_random_passages_start_x $i_random_passages_start_y _"i_random_passages_start"}
#endif

        #-------------------------------------------------

        #code for making a water or lava chasm
        #put into start event since accessing the stored chamber location in prestart doesn't seem possible
        #randomly decide the type
        [set_variable]
            name=s_NewTerrain
            rand=Ww,Ql
        [/set_variable]
        #store the relating chamber
        [store_locations]
            variable=locs_WaterLavaChamber
            terrain=Uu,Uu^Uf,Tb^Tf,Uh #cave, old fungus, new fungus, and cave hill
            [and]
                x=$i_WaterLava_x
                y=$i_WaterLava_y
                radius=3
            [/and]
        [/store_locations]
#ifdef DEBUG_MODE
        {DEBUG_MSG "Debug message: WaterLavaChamber.length: $locs_WaterLavaChamber.length"}
#endif
        #exclude those hexes that have any impassable terrain adjacent, to ensure no passages are cut off
        #it could be done better probably, but this is relatively easy to implement
        [store_locations]
            variable=locs_WaterLava
            find_in=locs_WaterLavaChamber
            [filter_adjacent_location]
                count=6
                [not]
                    terrain=Xu,Qxu
                [/not]
            [/filter_adjacent_location]
        [/store_locations]
#ifdef DEBUG_MODE
        {DEBUG_MSG "Debug message: WaterLava.length: $locs_WaterLava.length"}
#endif
        #convert the terrain
        {CONVERT_TERRAIN locs_WaterLava $s_NewTerrain}

        {CLEAR_VARIABLE s_NewTerrain}
        {CLEAR_VARIABLE locs_WaterLavaChamber}
        {CLEAR_VARIABLE locs_WaterLava}

        #-------------------------------------------------

        [recall]
            id=Krolock
        [/recall]
        [recall]
            id=Pelcatlus
        [/recall]
        [if]
            [have_unit]
                id=Krolock
            [/have_unit]
            [then]
                [message]
                    id=Krolock
                    message=_"These mazes look different than they did when I was here for the first time."
                [/message]
                {TEG_EARTHQUAKE}
            [/then]
        [/if]
        [if]
            [have_unit]
                id=Pelcatlus
            [/have_unit]
            [then]
                [message]
                    id=Pelcatlus
                    message=_"It seems the rocks are moving..."
                [/message]
            [/then]
            [else]
                [message]
                    id=Dulatus
                    message=_"It seems the rocks are moving..."
                [/message]
            [/else]
        [/if]
        {TEG_EARTHQUAKE}

        #-------------------------------------------------
        #find a position that has a connection to the player's starting position, but is "as far in the west as possible"
        [store_starting_location]
            side=1
            variable=c_Start
        [/store_starting_location]
        [store_locations]
            variable=locs_MoveUnitFakesFrom
            x=$c_Start.x
            y=$c_Start.y
            [filter_radius]
                [not]
                    #cave wall, chasm, lava chasm
                    terrain=Xu,Qxu,Ql #all non-impassables on this map
                [/not]
            [/filter_radius]
            radius=15
        [/store_locations]
        #find that hex out of that positions that has minimal x
        {VARIABLE i_MoveUnitFakesFromIndex 0}
        {FOREACH locs_MoveUnitFakesFrom i_CurrentPosition}
            [if]
                [variable]
                    name=locs_MoveUnitFakesFrom[$i_CurrentPosition].x
                    less_than=$locs_MoveUnitFakesFrom[$i_MoveUnitFakesFromIndex].x
                [/variable]
                [then]
                    {VARIABLE i_MoveUnitFakesFromIndex $i_CurrentPosition}
                [/then]
            [/if]
        {NEXT i_CurrentPosition}

        # wmllint: recognize extra_scout
        {EXTRA_EXPEDITIONER (Dwarvish Scout) extra_scout (
            {TRAIT_QUICK}
            {TRAIT_HEALTHY}
        )}
        # wmllint: recognize extra_fighter
        {EXTRA_EXPEDITIONER (Dwarvish Fighter) extra_fighter (
            {TRAIT_STRONG}
            {TRAIT_HEALTHY}
        )}
        # wmllint: recognize extra_guard
        {EXTRA_EXPEDITIONER (Dwarvish Guardsman) extra_guard (
            {TRAIT_HEALTHY}
            {TRAIT_INTELLIGENT}
        )}

        # wmllint: recognize Celylia
        # wmllint: recognize Aiglathing
        # wmllint: recognize Clarissa

        #loop over Hamel's loyal units
        #if Aiglathing, Clarissa or Celylia, move them from somewhere far in the shroud next to Dulatus
        #otherwise, put them to the recall list
        {FOREACH u_HamelLoyalUnits i_CurrentUnit}
            [if]
                [variable]
                    name=u_HamelLoyalUnits[$i_CurrentUnit].id
                    equals=Aiglathing
                [/variable]
                [or]
                    [variable]
                        name=u_HamelLoyalUnits[$i_CurrentUnit].id
                        equals=Clarissa
                    [/variable]
                [/or]
                [or]
                    [variable]
                        name=u_HamelLoyalUnits[$i_CurrentUnit].id
                        equals=Celylia
                    [/variable]
                [/or]
                [then]
                    {VARIABLE u_HamelLoyalUnits[$i_CurrentUnit].side 2}
                    {VACANT_HEX $c_Start.x $c_Start.y c_Position}
                    [move_unit_fake]
                        x=$locs_MoveUnitFakesFrom[$i_MoveUnitFakesFromIndex].x,$c_Position.x
                        y=$locs_MoveUnitFakesFrom[$i_MoveUnitFakesFromIndex].y,$c_Position.y
                        side=2
                        type=$u_HamelLoyalUnits[$i_CurrentUnit].type
                        gender=$u_HamelLoyalUnits[$i_CurrentUnit].gender
                    [/move_unit_fake]
                    [unstore_unit]
                        variable=u_HamelLoyalUnits[$i_CurrentUnit]
                        x,y=$c_Position.x,$c_Position.y
                    [/unstore_unit]
                [/then]
                [else]
                    #put the unit to recall list since already x,y=recall,recall
                    [unstore_unit]
                        variable=u_HamelLoyalUnits[$i_CurrentUnit]
                    [/unstore_unit]
                [/else]
            [/if]
        {NEXT i_CurrentUnit}
        {CLEAR_VARIABLE u_HamelLoyalUnits}

        {CLEAR_VARIABLE locs_MoveUnitFakesFrom}
        {CLEAR_VARIABLE i_MoveUnitFakesFromIndex}
        {CLEAR_VARIABLE c_Start}
        {CLEAR_VARIABLE c_Position}

        #-------------------------------------------------
        [message]
            id=Aiglathing
            message=_"?!? I don't get it... isn't this Dulatus?"
        [/message]
        [message]
            id=extra_fighter
            message=_"We thought you're dead!?"
        [/message]
        [if]
            [have_unit]
                id=Celylia
            [/have_unit]
            [then]
                {INCIDENTAL_MUSIC "love_theme.ogg"}
                [message]
                    id=Celylia
                    message=_"This is a friend of yours!?"
                [/message]
            [/then]
        [/if]
        [message]
            id=extra_scout
            message=_"What are you doing here?"
        [/message]
        [message]
            id=Clarissa
            message=_"I'm so happy to see you alive... but how did you survive?"
        [/message]
        [message]
            id=Krolock
            message=_"These are your friends, Dulatus?"
        [/message]
        [message]
            id=Pelcatlus
            message=_"It feels so good to be among my people again."
        [/message]
        [message]
            id=extra_guard
            message=_"You do have trolls in your army I see?"
        [/message]
        [message]
            # wmllint: recognize Dulatus
            id=Dulatus
            message=_"Welcome friends... it is a long story which I have to tell. But what about you, how did you come here?"
        [/message]
        [message]
            id=Aiglathing
            message=_"We've been on an expedition into the eastern mines together with our scouts as we realized that we must have lost our way."
        [/message]
        [message]
            id=extra_scout
            message=_"Hamel's base must be somewhere to the far west from here. More than that I cannot tell."
        [/message]
        [if]
            [have_unit]
                id=Celylia
            [/have_unit]
            [then]
                [message]
                    id=Dulatus
                    message=_"Trolls are with me, but elves are with you, I see."
                [/message]
                [message]
                    id=Celylia
                    message=_"I am here in representation of the elves of Wesmere."
                [/message]
            [/then]
        [/if]
        [message]
            id=Dulatus
            message=_"You'll have to tell me your story, too. Now let's try to get back to Hamel."
        [/message]
        #give the player again control over his loyal units
        {MODIFY_UNIT (
            side=2
            [not]
                id=Hamel
            [/not]
        ) side 1}
        [message]
            speaker=narrator
            image=wesnoth-icon.png
            # po: there was a typo here previously; I think I've fixed it now, though:
            message=_"Hint: You can now (again) recruit dwarvish scouts, but you can no longer recruit trolls. All your loyal units are available again, as well as the rest of the former recall list after this scenario. Your allied ai player doesn't control them."
        [/message]
    [/event]
#undef EXTRA_EXPEDITIONER

    {TEG_ON_SIGHTING hamel_side_sighted 1 side=2 (
        [message]
            speaker=unit
            message=_"What? Who's there?"
        [/message]
        [if]
            [variable]
                name=second_unit.race
                equals=troll
            [/variable]
            [then]
                [message]
                    speaker=second_unit
                    # po: speaker is a troll:
                    message=_"Hi there, we're some friends... of your friends... who are coming back, and have a big surprise."
                [/message]
                [message]
                    speaker=unit
                    message=_"...really? But you're a troll, though."
                [/message]
                [message]
                    speaker=second_unit
                    message=_"Look, it's a long story. We don't want to have to retell it to each of you. Can't you just trust us... please?"
                [/message]
                [message]
                    speaker=unit
                    message=_"Uh, well... no, I don't think I can really trust you, but just because I don't trust you, doesn't mean that we have to fight, either. I'll let you by, but just be aware that we're keeping your eyes on you, and are ready to slay you if you turn out not to be the friends you claim to be."
                [/message]
                [message]
                    speaker=second_unit
                    message=_"That's fine; I'm sure you'll believe us once you see the surprise I was mentioning."
                [/message]
                [message]
                    speaker=unit
                    # po: spoken distrustfully:
                    message=_"Mhm. Anyways, move along now."
                [/message]
            [/then]
            [else]
                [message]
                    speaker=second_unit
                    # po: speaker is any other side 1 unit who's not a troll:
                    message=_"Hi there, we're some friends coming back, and we have a big surprise."
                [/message]
                [message]
                    speaker=unit
                    message=_"Move on! The castle is just ahead."
                [/message]
            [/else]
        [/if]
    )}

    [event]
        name=moveto
        [filter]
            side=1
            [not]
                id=Dulatus
            [/not]
            [filter_location]
                find_in=locs_HamelCastle
            [/filter_location]
        [/filter]
        [message]
            speaker=unit
            #po: speaker = side 1 unit who has reached Hamel's castle before Dulatus has:
            message=_"Dulatus! Hurry up and join me here!"
        [/message]
        [message]
            speaker=Hamel
            #po: remember, Hamel still thinks Dulatus is dead at this point, so he would be
            #po: very confused here, and he'd be assuming he just misheard:
            message=_"...who was that you just called out to?! Do my ears deceive me?!"
        [/message]
        [message]
            speaker=unit
            #po: not literally a "second", just a figure of speech for a short amount of time:
            message=_"You'll see in a second!"
        [/message]
    [/event]
    [event]
        name=moveto
        [filter]
            id=Dulatus
            [filter_location]
                find_in=locs_HamelCastle
            [/filter_location]
        [/filter]
        [message]
            id=Hamel
            message=_"Dulatus!?! You live!?"
        [/message]
        [message]
            id=Dulatus
            # wmllint: local spelling expeditioners
            message=_"It is a VERY long story. And I've brought your lost expeditioners with me."
        [/message]
        [endlevel]
            result=victory
            next_scenario=11t_Council
            {NEW_GOLD_CARRYOVER 40}
        [/endlevel]
    [/event]

    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            race=troll
        [/filter_second]
        [fire_event]
            name=troll_dialog
            [primary_unit]
                x=$x2
                y=$y2
            [/primary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            race=troll
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [fire_event]
            name=troll_dialog
            [primary_unit]
                x=$x1
                y=$y1
            [/primary_unit]
        [/fire_event]
    [/event]
    [event]
        name=troll_dialog
        [if]
            [have_unit]
                race=troll
                side=1
            [/have_unit]
            [then]
                [message]
                    speaker=unit
                    message=_"What? Trolls and dwarves together? You're not our enemy, leave these dwarves and begone."
                [/message]
                [message]
                    race=troll
                    side=1
                    message=_"These dwarves saved my life and are my friends. If you fight them, you'll have to fight me."
                [/message]
                [message]
                    speaker=unit
                    message=_"Traitor! Then you'll all die with them."
                [/message]
            [/then]
        [/if]
    [/event]

    #Hamel gets some reinforcements if in bad need. The player can do little to defend him.
    [event]
        name=attack
        [filter_second]
            id=Hamel
        [/filter_second]
        [message]
            id=Hamel
            message=_"Ouch! The enemy attacks me, my reservists must join the fight!"
        [/message]
        {LOYAL_UNIT 2 (Dwarvish Steelclad) $second_unit.x $second_unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Pathfinder) $second_unit.x $second_unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Fighter) $second_unit.x $second_unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Thunderer) $second_unit.x $second_unit.y} {PASSABLE}
#ifdef EASY
        {LOYAL_UNIT 2 (Alchemist) $second_unit.x $second_unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Scout) $second_unit.x $second_unit.y} {PASSABLE}
#endif
#ifdef NORMAL
        {LOYAL_UNIT 2 (Dwarvish Scout) $second_unit.x $second_unit.y} {PASSABLE}
#endif
        [role]
            type=Dwarvish Steelclad
            side=2
            role=r_Speaker
        [/role]
        [message]
            role=r_Speaker
            message=_"Let the battle begin!"
        [/message]
        [message]
            id=Clarissa
            message=_"Who speaks there?"
        [/message]
    [/event]

    # Let's try this the other way around, too:
    [event]
        name=attack
        [filter]
            id=Hamel
        [/filter]
        [message]
            id=Hamel
            message=_"Time for me to fight! My reservists must join me!"
        [/message]
        {LOYAL_UNIT 2 (Dwarvish Steelclad) $unit.x $unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Pathfinder) $unit.x $unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Fighter) $unit.x $unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Thunderer) $unit.x $unit.y} {PASSABLE}
#ifdef EASY
        {LOYAL_UNIT 2 (Alchemist) $unit.x $unit.y} {PASSABLE}
        {LOYAL_UNIT 2 (Dwarvish Scout) $unit.x $unit.y} {PASSABLE}
#endif
#ifdef NORMAL
        {LOYAL_UNIT 2 (Dwarvish Scout) $unit.x $unit.y} {PASSABLE}
#endif
        [role]
            type=Dwarvish Steelclad
            side=2
            role=r_Speaker
        [/role]
        [message]
            role=r_Speaker
            message=_"Let the battle commence!"
        [/message]
        [message]
            id=Clarissa
            message=_"Who speaks there?"
        [/message]
    [/event]

    [event]
        name=last breath
        [filter]
            id=Hamel
        [/filter]
        [store_unit]
            variable=u_Hamel
            [filter]
                id=Hamel
            [/filter]
        [/store_unit]
        [remove_shroud]
            side=1
            x=$u_Hamel.x
            y=$u_Hamel.y
            radius=2
        [/remove_shroud]
        [redraw]
            clear_shroud=yes
        [/redraw]
        {CLEAR_VARIABLE u_Hamel}
        [message]
            id=Hamel
            message= _ "Argh! My tribe will vanish!"
        [/message]
        [kill]
            id=Hamel
            animate=yes
        [/kill]
        [message]
            id=Dulatus
            message= _ "Oh no! I failed in my duty to protect the next king!"
        [/message]
        [message]
            id=Clarissa
            message= _ "He really had potential..."
        [/message]
        [message]
            id=Aiglathing
            message= _ "We are lost..."
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    {GENERAL_BONUS_VIA_GOLD id=Grugdush {ON_DIFFICULTY 40 30 20}}
    {GENERAL_BONUS_VIA_GOLD (id=Dead_Knight) {ON_DIFFICULTY 50 40 30}}
    {GENERAL_BONUS_VIA_GOLD id=Gark {ON_DIFFICULTY 50 40 30}}
    [event]
        name=victory
        ############################################################################################
        #leader flip section
        #store Hamel and make him  side 1 again
        [store_unit]
            variable=u_Hamel
            [filter]
                id=Hamel
            [/filter]
        [/store_unit]
        {VARIABLE u_Hamel.side 1}
        {TEG_UNIT_RESET u_Hamel}

        ############################################################################################
        {CLEAR_SCENARIO_VARIABLES}
        {CLEAR_CAMPAIGN_VARIABLES}
    [/event]

    {HERO_DEATHS_DULATUS_SCENARIOS}
    {TIME_OVER_DULATUS_SCENARIOS}
[/scenario]

#undef INITIALIZE_CAMPAIGN_VARIABLES
#undef CLEAR_CAMPAIGN_VARIABLES
#undef INITIALIZE_SCENARIO_VARIABLES
#undef CLEAR_SCENARIO_VARIABLES
